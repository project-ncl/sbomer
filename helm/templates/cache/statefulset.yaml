apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-cache
{{ include "sbomer.labels" (list . "cache") | indent 2 }}
spec:
  serviceName: {{ include "sbomer.component.cache" . }}
  replicas: 3
  selector:
    matchLabels:
{{ include "sbomer.selector" (list . "cache") | indent 6 }}
  template:
    metadata:
{{ include "sbomer.labels" (list . "cache") | indent 6 }}
    spec:
      serviceAccountName: {{ include "sbomer.serviceAccountName" . }}
      containers:
        - image: {{ .Values.cache.image.repository }}:{{ .Values.cache.image.tag }}
          name: nginx
          imagePullPolicy: {{ .Values.cache.image.pullPolicy }}
          env:
            - name: PNC_SERVICE_HOST
              value: {{ .Values.pnc.host }}
            - name: INDY_REPOSITORY_HOST
              value: {{ .Values.indy.host }}
          ports:
            - containerPort: 7070
              name: http
              protocol: TCP
          volumeMounts:
            - mountPath: "/var/www/cache"
              name: data
          command:
            - /bin/bash
          args:
            - -c
            - envsubst '$${PNC_SERVICE_HOST} $${INDY_REPOSITORY_HOST}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'
          resources:
            requests:
              cpu: 400m
              memory: 1000Mi
            limits:
              cpu: 400m
              memory: 1000Mi
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        {{ .Values.storage.reclaimPolicyAnnotation }}: {{ .Values.storage.reclaimPolicy }}
      labels:
        paas.redhat.com/appcode: PNC-001
    spec:
      accessModes:
        - {{ .Values.cache.storage.accessMode }}
      storageClassName: {{ .Values.storage.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.cache.storage.size }}