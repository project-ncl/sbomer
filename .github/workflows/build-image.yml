name: Build container image

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      artifact:
        type: string
        default: false
      push:
        type: boolean
        default: false

jobs:
  build-image:
    runs-on: ubuntu-latest
    name: "Build ${{ inputs.image }} image"
    steps:
      - uses: project-ncl/sbomer/.github/actions/checkout@main
        if: github.event_name == 'pull_request_target'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          triggering-actor: ${{ github.triggering_actor }}
          repo-ref: ${{ github.event.pull_request.head.ref }}
          repo-full-name: ${{ github.event.pull_request.head.repo.full_name }}

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'

      - name: Set vars
        id: vars
        run: echo "COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Populate certificates
        env:
          IT_ROOT_CA_2022: ${{ secrets.IT_ROOT_CA_2022 }}
          IT_ROOT_CA_2015: ${{ secrets.IT_ROOT_CA_2015 }}
          CA_CHAIN: ${{ secrets.CA_CHAIN }}
        run: |
          mkdir certs
          echo "$IT_ROOT_CA_2022" > certs/2022-IT-Root-CA.pem
          echo "$IT_ROOT_CA_2015" > certs/2015-IT-Root-CA.pem

          openssl x509 -in certs/2015-IT-Root-CA.pem -text > /dev/null
          openssl x509 -in certs/2022-IT-Root-CA.pem -text > /dev/null
      - name: Download ${{ inputs.artifact }}
        if: "${{ inputs.artifact != 'false' }}"
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ inputs.artifact }}
          path: ${{ inputs.artifact }}/target/quarkus-app

      - name: Prepare temporary directory
        run: mkdir -p ${{ github.workspace }}/tmp/buildah

      - name: Build ${{ inputs.image }} image
        id: build-image
        env:
          TMPDIR: ${{ github.workspace }}/tmp/buildah
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ inputs.image }}
          layers: true
          tags: latest ${{ env.COMMIT_SHORT_SHA }}
          containerfiles: |
            ./images/${{ inputs.image }}/Containerfile

      - name: Push to Quay
        id: push-to-quay
        if: ${{ inputs.push }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ secrets.REGISTRY_ORG }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
