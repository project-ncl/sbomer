stages:
  - build
  - static-analysis
  - deploy

default:
  tags: [openshift]

.build-image:
  interruptible: true
  variables:
    KUBERNETES_CPU_REQUEST: "500m"
    KUBERNETES_CPU_LIMIT: "500m"
    KUBERNETES_MEMORY_REQUEST: "768Mi"
    KUBERNETES_MEMORY_LIMIT: "768Mi"
    OCI_IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
  image: registry.redhat.io/ubi8/buildah:latest
  stage: build
  script:
    - buildah --storage-driver=${STORAGE_DRIVER:-vfs} bud ${BUILD_EXTRA_ARGS:-} --format=${IMAGE_FORMAT:-oci} --tls-verify=${TLS_VERIFY:-true} --no-cache -f ${CONTAINERFILE:-Dockerfile} -t ${OCI_IMAGE_NAME}:${OCI_IMAGE_TAG:-latest} ${BUILD_CONTEXT:-.}
    - >
      if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]; then
        buildah --storage-driver=${STORAGE_DRIVER:-vfs} push --creds ${QUAY_CREDS_STAGE} ${PUSH_EXTRA_ARGS:-} --tls-verify=${TLS_VERIFY:-true} ${OCI_IMAGE_NAME}:${OCI_IMAGE_TAG:-latest} docker://${OCI_IMAGE_NAME}:${OCI_IMAGE_TAG:-latest}
      else
        echo "Skipping pushing image ${OCI_IMAGE_NAME}:${OCI_IMAGE_TAG:-latest}"
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build:
  image:
    name: registry.access.redhat.com/ubi9/openjdk-17@sha256:75a4e8dc22859514e87c4efc5096ed7a36d8230ed0477ed1e93c24866328ec76
    entrypoint: [""]
  stage: build
  cache:
    key: maven
    paths:
      - .m2/repository
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    KUBERNETES_CPU_REQUEST: "1500m"
    KUBERNETES_CPU_LIMIT: "1500m"
    KUBERNETES_MEMORY_REQUEST: "5Gi"
    KUBERNETES_MEMORY_LIMIT: "5Gi"
    MAVEN_OPTS: >-
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
      -XX:InitialRAMPercentage=50 -XX:MaxRAMPercentage=50 -XX:+ExitOnOutOfMemoryError -XshowSettings:vm

    MAVEN_CLI_OPTS: >-
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      -DinstallAtEnd=true
      -DdeployAtEnd=true
      -Dsurefire.useFile=false
      -Denforcer.skipRules=bannedRepositories
      --no-transfer-progress

  script:
    - ./mvnw -s .ci/settings.xml verify ${MAVEN_CLI_OPTS} -DbuildNumber=${CI_COMMIT_SHORT_SHA}
  artifacts:
    when: always
    reports:
      junit:
        - "**/target/surefire-reports/**/*.xml"
    paths:
      - service/target/quarkus-app/
      - cli/target/quarkus-app/

sonarqube:
  image:
    name: registry.access.redhat.com/ubi9/openjdk-17@sha256:75a4e8dc22859514e87c4efc5096ed7a36d8230ed0477ed1e93c24866328ec76
    entrypoint: [""]
  stage: static-analysis
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    KUBERNETES_CPU_REQUEST: "500m"
    KUBERNETES_CPU_LIMIT: "500m"
    KUBERNETES_MEMORY_REQUEST: "768Mi"
    KUBERNETES_MEMORY_LIMIT: "768Mi"
    MAVEN_OPTS: >-
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
      -XX:InitialRAMPercentage=70 -XX:MaxRAMPercentage=70 -XX:+ExitOnOutOfMemoryError -XshowSettings:vm
  before_script:
    - curl -L "https://${INTERNAL_CERTS_HOST}/certs/2022-IT-Root-CA.pem" -o /etc/pki/ca-trust/source/anchors/2022-IT-Root-CA.pem
    - curl -L "https://${INTERNAL_CERTS_HOST}/certs/2015-IT-Root-CA.pem" -o /etc/pki/ca-trust/source/anchors/2015-IT-Root-CA.pem
    - update-ca-trust
  script:
    - ./mvnw -s .ci/settings.xml sonar:sonar -Dsonar.projectKey=SBOMer
  needs:
    - job: build

build-image-service:
  extends:
    - .build-image
  variables:
    OCI_IMAGE_NAME: ${IMAGE_REGISTRY_STAGE}/sbomer-service
    CONTAINERFILE: images/sbomer-service/Containerfile
  before_script:
    - mkdir certs
    - curl -L "https://${INTERNAL_CERTS_HOST}/certs/2022-IT-Root-CA.pem" -o certs/2022-IT-Root-CA.pem
    - curl -L "https://${INTERNAL_CERTS_HOST}/certs/2015-IT-Root-CA.pem" -o certs/2015-IT-Root-CA.pem
  dependencies:
    - build
  needs:
    - job: build

build-image-generator:
  extends:
    - .build-image
  variables:
    OCI_IMAGE_NAME: ${IMAGE_REGISTRY_STAGE}/sbomer-generator
    CONTAINERFILE: images/sbomer-generator/Containerfile
  before_script:
    - mkdir certs
    - curl -L "https://${INTERNAL_CERTS_HOST}/certs/2022-IT-Root-CA.pem" -o certs/2022-IT-Root-CA.pem
    - curl -L "https://${INTERNAL_CERTS_HOST}/certs/2015-IT-Root-CA.pem" -o certs/2015-IT-Root-CA.pem
  dependencies:
    - build
  needs:
    - job: build

pages:
  image:
    name: registry.access.redhat.com/ubi9@sha256:770cf07083e1c85ae69c25181a205b7cdef63c11b794c89b3b487d4670b4c328
    entrypoint: [""]
  variables:
    KUBERNETES_CPU_REQUEST: "100m"
    KUBERNETES_CPU_LIMIT: "100m"
    KUBERNETES_MEMORY_REQUEST: "256Mi"
    KUBERNETES_MEMORY_LIMIT: "256Mi"
  stage: build
  script:
    - dnf install -y --setopt=tsflags=nodocs make gcc-c++
    - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
    - export NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh" --no-use
    - nvm install v18
    - npm install --global yarn
    - yarn install --frozen-lockfile --no-progress
    - >
      NODE_TLS_REJECT_UNAUTHORIZED=0
      npx antora --fetch --to-dir public antora-playbook.yml
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  variables:
    RELEASE_HASH: ${CI_COMMIT_SHORT_SHA}
  stage: deploy
  trigger:
    project: appsvcs-platform/security/sbomer-helm
    branch: main
    strategy: depend
  needs:
    - job: build-image-generator
    - job: build-image-service
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
