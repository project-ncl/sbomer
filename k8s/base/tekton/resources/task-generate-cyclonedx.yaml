#
# JBoss, Home of Professional Open Source.
# Copyright 2023 Red Hat, Inc., and individual contributors
# as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sbomer-generate-cyclonedx
spec:
  params:
    - name: jdk-version
      type: string
    - name: mvn-version
      type: string
    - name: workdir
      type: string
    - name: additional-cyclonedx-args
      type: string
      default: "--batch-mode --no-transfer-progress --quiet"
    - name: cyclonedx-version
      type: string
      default: "2.7.5"
    - name: build-id
      type: string
    - name: sbom-processor
      type: string
  steps:
    - name: generate-cyclonedx-sbom
      image: sbomer-generator
      imagePullPolicy: IfNotPresent
      script: |
        #!/usr/bin/env bash

        source ~/.sdkman/bin/sdkman-init.sh

        sdk use maven $(params.mvn-version)
        sdk use java $(params.jdk-version)

        cd $(workspaces.data.path)/$(params.workdir)/source

        echo "Working from the `pwd` directory"

        BOM_PATH="$(workspaces.data.path)/$(params.workdir)/source/target/$(params.workdir).json"

        echo "Running SBOM generation with CycloneDX Maven plugin:"
        mvn org.cyclonedx:cyclonedx-maven-plugin:$(params.cyclonedx-version):makeAggregateBom -DoutputFormat=json -DoutputName=$(params.workdir) --settings ~/settings.xml $(params.additional-cyclonedx-args)

        cat ${BOM_PATH}

        echo "Done, SBOM generated at: ${BOM_PATH}"

        printf "%s" "${BOM_PATH}" > "$(results.bom.path)"
    - name: "store-and-enrich-cyclonedx-sbom"
      image: sbomer-generator
      imagePullPolicy: IfNotPresent
      env:
        - name: SBOMER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sbomer-tekton
              key: SBOMER_SERVICE_URL
      script: |
        #!/usr/bin/env bash

        jq -s '{buildId: "$(params.build-id)", generator: "CYCLONEDX", sbom: .[0]}' $(workspaces.data.path)/$(params.workdir)/source/target/$(params.workdir).json > $(workspaces.data.path)/$(params.workdir)/source/target/payload.json

        [[ -z "${SBOMER_SERVICE_URL}" ]] && SBOMER_SERVICE_URL="http://${SBOMER_SERVICE_HOST}:${SBOMER_SERVICE_PORT}"

        curl -vX POST -H "Content-Type: application/json" -d @$(workspaces.data.path)/$(params.workdir)/source/target/payload.json ${SBOMER_SERVICE_URL}/api/v1alpha1/sboms/enrich?$(params.sbom-processor)

  results:
    - name: "bom"
      description: "Path to the generated SBOM"
  workspaces:
    - name: data
      description: Main workspace
